{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n        \"icon-sm\": \"size-8\",\n        \"icon-lg\": \"size-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;YACN,WAAW;YACX,WAAW;QACb;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,4SAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx <module evaluation>\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,uYAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,uEACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uEACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uEACA;AAEG,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uEACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uEACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uEACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uEACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uEACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uEACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 258, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/dialog.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Dialog = registerClientReference(\n    function() { throw new Error(\"Attempted to call Dialog() from the server but Dialog is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"Dialog\",\n);\nexport const DialogClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogClose() from the server but DialogClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogClose\",\n);\nexport const DialogContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogContent() from the server but DialogContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogContent\",\n);\nexport const DialogDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogDescription() from the server but DialogDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogDescription\",\n);\nexport const DialogFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogFooter() from the server but DialogFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogFooter\",\n);\nexport const DialogHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogHeader() from the server but DialogHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogHeader\",\n);\nexport const DialogOverlay = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogOverlay() from the server but DialogOverlay is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogOverlay\",\n);\nexport const DialogPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogPortal() from the server but DialogPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogPortal\",\n);\nexport const DialogTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTitle() from the server but DialogTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogTitle\",\n);\nexport const DialogTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DialogTrigger() from the server but DialogTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/dialog.tsx\",\n    \"DialogTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,uYAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,mDACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mDACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mDACA;AAEG,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,mDACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,mDACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,mDACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mDACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,mDACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,mDACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,mDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/sheet.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetHeader\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx <module evaluation>\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,sEACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sEACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sEACA;AAEG,MAAM,mBAAmB,IAAA,uYAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,sEACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sEACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sEACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,sEACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,sEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/sheet.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sheet = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sheet() from the server but Sheet is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"Sheet\",\n);\nexport const SheetClose = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetClose() from the server but SheetClose is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetClose\",\n);\nexport const SheetContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetContent() from the server but SheetContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetContent\",\n);\nexport const SheetDescription = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetDescription() from the server but SheetDescription is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetDescription\",\n);\nexport const SheetFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetFooter() from the server but SheetFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetFooter\",\n);\nexport const SheetHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetHeader() from the server but SheetHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetHeader\",\n);\nexport const SheetTitle = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTitle() from the server but SheetTitle is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetTitle\",\n);\nexport const SheetTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SheetTrigger() from the server but SheetTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/sheet.tsx\",\n    \"SheetTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,kDACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kDACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kDACA;AAEG,MAAM,mBAAmB,IAAA,uYAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,kDACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kDACA;AAEG,MAAM,cAAc,IAAA,uYAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,kDACA;AAEG,MAAM,aAAa,IAAA,uYAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,kDACA;AAEG,MAAM,eAAe,IAAA,uYAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,kDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 431, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6WAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/label.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,sEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/label.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,QAAQ,IAAA,uYAAuB,EACxC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,kDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 484, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/popover.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Popover = registerClientReference(\n    function() { throw new Error(\"Attempted to call Popover() from the server but Popover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx <module evaluation>\",\n    \"Popover\",\n);\nexport const PopoverAnchor = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverAnchor() from the server but PopoverAnchor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx <module evaluation>\",\n    \"PopoverAnchor\",\n);\nexport const PopoverContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverContent() from the server but PopoverContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx <module evaluation>\",\n    \"PopoverContent\",\n);\nexport const PopoverTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverTrigger() from the server but PopoverTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx <module evaluation>\",\n    \"PopoverTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uYAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,wEACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,wEACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,wEACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,wEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/popover.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Popover = registerClientReference(\n    function() { throw new Error(\"Attempted to call Popover() from the server but Popover is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx\",\n    \"Popover\",\n);\nexport const PopoverAnchor = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverAnchor() from the server but PopoverAnchor is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx\",\n    \"PopoverAnchor\",\n);\nexport const PopoverContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverContent() from the server but PopoverContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx\",\n    \"PopoverContent\",\n);\nexport const PopoverTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call PopoverTrigger() from the server but PopoverTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/popover.tsx\",\n    \"PopoverTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uYAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,oDACA;AAEG,MAAM,gBAAgB,IAAA,uYAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,oDACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oDACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,oDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 550, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 558, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/calendar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/calendar.tsx <module evaluation>\",\n    \"Calendar\",\n);\nexport const CalendarDayButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call CalendarDayButton() from the server but CalendarDayButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/calendar.tsx <module evaluation>\",\n    \"CalendarDayButton\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,uYAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,yEACA;AAEG,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,yEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/calendar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Calendar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Calendar() from the server but Calendar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/calendar.tsx\",\n    \"Calendar\",\n);\nexport const CalendarDayButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call CalendarDayButton() from the server but CalendarDayButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/calendar.tsx\",\n    \"CalendarDayButton\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,WAAW,IAAA,uYAAuB,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,qDACA;AAEG,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,qDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 596, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/textarea.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nfunction Textarea({ className, ...props }: React.ComponentProps<\"textarea\">) {\n  return (\n    <textarea\n      data-slot=\"textarea\"\n      className={cn(\n        \"border-input placeholder:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 flex field-sizing-content min-h-16 w-full rounded-md border bg-transparent px-3 py-2 text-base shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Textarea }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAyC;IACzE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,ucACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 628, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,IAAA,kPAAG,EACvB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,4SAAI,GAAG;IAE9B,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 674, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/separator.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/separator.tsx <module evaluation>\",\n    \"Separator\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,0EACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 688, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/separator.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Separator = registerClientReference(\n    function() { throw new Error(\"Attempted to call Separator() from the server but Separator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/packages/ui/src/components/separator.tsx\",\n    \"Separator\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,YAAY,IAAA,uYAAuB,EAC5C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,sDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 702, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 710, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/lib/localProjects.ts"],"sourcesContent":["export type ProjectMember = { id: string; name: string };\r\nexport type LocalProject = {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    createdAt: string;\r\n    deadline?: string;\r\n    managerId: string;\r\n    members: ProjectMember[];\r\n    tasks: string[];\r\n};\r\n\r\nconst LS_KEY = \"tbx:projects_v1\";\r\n\r\nexport function loadLocalProjects(): LocalProject[] {\r\n    try {\r\n        const raw = localStorage.getItem(LS_KEY);\r\n        if (!raw) {\r\n            const defaultProjects: LocalProject[] = [\r\n                {\r\n                    id: `proj-${Date.now()}`,\r\n                    name: \"Sample Project\",\r\n                    description: \"A sample project for testing\",\r\n                    createdAt: new Date().toISOString(),\r\n                    deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n                    managerId: \"leader-1\",\r\n                    members: [\r\n                        { id: \"leader-1\", name: \"Leader\" },\r\n                        { id: \"member-2\", name: \"Member\" },\r\n                    ],\r\n                    tasks: [],\r\n                },\r\n            ];\r\n            saveLocalProjects(defaultProjects);\r\n            return defaultProjects;\r\n        }\r\n        return JSON.parse(raw) as LocalProject[];\r\n    } catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function saveLocalProjects(projects: LocalProject[]) {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(projects));\r\n}\r\n\r\nexport function addLocalProject(p: LocalProject) {\r\n    const list = loadLocalProjects();\r\n    list.push(p);\r\n    saveLocalProjects(list);\r\n}\r\n\r\nexport function updateLocalProject(id: string, patch: Partial<LocalProject>) {\r\n    const list = loadLocalProjects();\r\n    const idx = list.findIndex((x) => x.id === id);\r\n    if (idx === -1) return;\r\n    list[idx] = { ...list[idx], ...patch, updatedAt: new Date().toISOString() } as LocalProject;\r\n    saveLocalProjects(list);\r\n}\r\n\r\nexport function deleteLocalProject(id: string) {\r\n    const list = loadLocalProjects().filter((p) => p.id !== id);\r\n    saveLocalProjects(list);\r\n}"],"names":[],"mappings":";;;;;;;;;;;;AAYA,MAAM,SAAS;AAER,SAAS;IACZ,IAAI;QACA,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK;YACN,MAAM,kBAAkC;gBACpC;oBACI,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;oBACxB,MAAM;oBACN,aAAa;oBACb,WAAW,IAAI,OAAO,WAAW;oBACjC,UAAU,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,WAAW;oBACpE,WAAW;oBACX,SAAS;wBACL;4BAAE,IAAI;4BAAY,MAAM;wBAAS;wBACjC;4BAAE,IAAI;4BAAY,MAAM;wBAAS;qBACpC;oBACD,OAAO,EAAE;gBACb;aACH;YACD,kBAAkB;YAClB,OAAO;QACX;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAM;QACJ,OAAO,EAAE;IACb;AACJ;AAEO,SAAS,kBAAkB,QAAwB;IACtD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;AAChD;AAEO,SAAS,gBAAgB,CAAe;IAC3C,MAAM,OAAO;IACb,KAAK,IAAI,CAAC;IACV,kBAAkB;AACtB;AAEO,SAAS,mBAAmB,EAAU,EAAE,KAA4B;IACvE,MAAM,OAAO;IACb,MAAM,MAAM,KAAK,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC3C,IAAI,QAAQ,CAAC,GAAG;IAChB,IAAI,CAAC,IAAI,GAAG;QAAE,GAAG,IAAI,CAAC,IAAI;QAAE,GAAG,KAAK;QAAE,WAAW,IAAI,OAAO,WAAW;IAAG;IAC1E,kBAAkB;AACtB;AAEO,SAAS,mBAAmB,EAAU;IACzC,MAAM,OAAO,oBAAoB,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACxD,kBAAkB;AACtB","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/lib/localTasks.ts"],"sourcesContent":["\r\nexport interface LocalTask {\r\n    id: string;\r\n    title: string;\r\n    description?: string;\r\n    status: \"TODO\" | \"IN_PROGRESS\" | \"DONE\";\r\n    createdAt: string;\r\n    dueDate?: string;\r\n    projectId: string;\r\n    assignees: { id: string; name: string }[];\r\n}\r\n\r\nconst TASKS_LS = \"tbx:tasks_v1\";\r\n\r\nexport function loadLocalTasks(): LocalTask[] {\r\n    try {\r\n        const raw = localStorage.getItem(TASKS_LS);\r\n        if (!raw) return [];\r\n        return JSON.parse(raw) as LocalTask[];\r\n    } catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function saveLocalTasks(tasks: LocalTask[]) {\r\n    localStorage.setItem(TASKS_LS, JSON.stringify(tasks));\r\n}\r\n\r\nexport function addLocalTask(t: LocalTask) {\r\n    const arr = loadLocalTasks();\r\n    arr.push(t);\r\n    saveLocalTasks(arr);\r\n}\r\n\r\nexport function updateLocalTask(id: string, patch: Partial<LocalTask>) {\r\n    const arr = loadLocalTasks();\r\n    const idx = arr.findIndex((x) => x.id === id);\r\n    if (idx === -1) return;\r\n    // @ts-ignore\r\n    arr[idx] = { ...arr[idx], ...patch, updatedAt: new Date().toISOString() };\r\n    saveLocalTasks(arr);\r\n}\r\n\r\nexport function deleteLocalTask(id: string) {\r\n    const arr = loadLocalTasks().filter((t) => t.id !== id);\r\n    saveLocalTasks(arr);\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAYA,MAAM,WAAW;AAEV,SAAS;IACZ,IAAI;QACA,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK,OAAO,EAAE;QACnB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAM;QACJ,OAAO,EAAE;IACb;AACJ;AAEO,SAAS,eAAe,KAAkB;IAC7C,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;AAClD;AAEO,SAAS,aAAa,CAAY;IACrC,MAAM,MAAM;IACZ,IAAI,IAAI,CAAC;IACT,eAAe;AACnB;AAEO,SAAS,gBAAgB,EAAU,EAAE,KAAyB;IACjE,MAAM,MAAM;IACZ,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC1C,IAAI,QAAQ,CAAC,GAAG;IAChB,aAAa;IACb,GAAG,CAAC,IAAI,GAAG;QAAE,GAAG,GAAG,CAAC,IAAI;QAAE,GAAG,KAAK;QAAE,WAAW,IAAI,OAAO,WAAW;IAAG;IACxE,eAAe;AACnB;AAEO,SAAS,gBAAgB,EAAU;IACtC,MAAM,MAAM,iBAAiB,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACpD,eAAe;AACnB","debugId":null}},
    {"offset": {"line": 833, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/stores/ui-store.ts"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\ninterface UIState {\r\n    activeProjectId: string | null;\r\n    setActiveProjectId: (id: string | null) => void;\r\n    isModalOpen: boolean;\r\n    setIsModalOpen: (open: boolean) => void;\r\n    activeDragTask: string | null;\r\n    setActiveDragTask: (id: string | null) => void;\r\n    viewMode: \"kanban\" | \"table\";\r\n    setViewMode: (mode: \"kanban\" | \"table\") => void;\r\n}\r\n\r\nexport const useUIStore = create<UIState>((set) => ({\r\n    activeProjectId: null,\r\n    setActiveProjectId: (id) => set({ activeProjectId: id }),\r\n    isModalOpen: false,\r\n    setIsModalOpen: (open) => set({ isModalOpen: open }),\r\n    activeDragTask: null,\r\n    setActiveDragTask: (id) => set({ activeDragTask: id }),\r\n    viewMode: \"kanban\",\r\n    setViewMode: (mode) => set({ viewMode: mode }),\r\n}));"],"names":[],"mappings":";;;;AAAA;;AAaO,MAAM,aAAa,IAAA,8PAAM,EAAU,CAAC,MAAQ,CAAC;QAChD,iBAAiB;QACjB,oBAAoB,CAAC,KAAO,IAAI;gBAAE,iBAAiB;YAAG;QACtD,aAAa;QACb,gBAAgB,CAAC,OAAS,IAAI;gBAAE,aAAa;YAAK;QAClD,gBAAgB;QAChB,mBAAmB,CAAC,KAAO,IAAI;gBAAE,gBAAgB;YAAG;QACpD,UAAU;QACV,aAAa,CAAC,OAAS,IAAI;gBAAE,UAAU;YAAK;IAChD,CAAC","debugId":null}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/app/projects/page.tsx"],"sourcesContent":["\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport {\r\n    Card,\r\n    CardContent,\r\n    CardHeader,\r\n    CardTitle,\r\n    CardDescription,\r\n    CardFooter,\r\n} from \"@workspace/ui/components/card\";\r\nimport { Button } from \"@workspace/ui/components/button\";\r\nimport {\r\n    Dialog,\r\n    DialogTrigger,\r\n    DialogContent,\r\n    DialogHeader,\r\n    DialogTitle,\r\n    DialogDescription,\r\n    DialogFooter,\r\n} from \"@workspace/ui/components/dialog\";\r\nimport {\r\n    Sheet,\r\n    SheetContent,\r\n    SheetHeader,\r\n    SheetTitle,\r\n} from \"@workspace/ui/components/sheet\";\r\nimport { Input } from \"@workspace/ui/components/input\";\r\nimport { Label } from \"@workspace/ui/components/label\";\r\nimport {\r\n    Popover,\r\n    PopoverContent,\r\n    PopoverTrigger,\r\n} from \"@workspace/ui/components/popover\";\r\nimport { Calendar } from \"@workspace/ui/components/calendar\";\r\nimport { Textarea } from \"@workspace/ui/components/textarea\";\r\nimport { Badge } from \"@workspace/ui/components/badge\";\r\nimport { Separator } from \"@workspace/ui/components/separator\";\r\nimport { format, isBefore, startOfDay } from \"date-fns\";\r\nimport { Calendar as CalendarIcon, Users, ListTodo, Edit, Trash2, Eye, Plus, X, FolderKanban } from \"lucide-react\";\r\nimport {\r\n    loadLocalProjects,\r\n    addLocalProject,\r\n    updateLocalProject,\r\n    deleteLocalProject,\r\n    LocalProject,\r\n} from \"@/lib/localProjects\";\r\nimport { loadLocalTasks, deleteLocalTask, updateLocalTask } from \"@/lib/localTasks\";\r\nimport { useUIStore } from \"@/stores/ui-store\";\r\nimport { toast } from \"sonner\";\r\n\r\ntype ProjectForm = {\r\n    name: string;\r\n    description?: string;\r\n    deadline?: Date | undefined;\r\n};\r\n\r\nexport default function ProjectsPage() {\r\n    const [projects, setProjects] = useState<LocalProject[]>([]);\r\n    const [openCreate, setOpenCreate] = useState(false);\r\n    const [editingId, setEditingId] = useState<string | null>(null);\r\n    const [viewing, setViewing] = useState<LocalProject | null>(null);\r\n    const [inviteName, setInviteName] = useState(\"\");\r\n    const [inviteList, setInviteList] = useState<{ id: string; name: string }[]>([]);\r\n    const [selectedDeadline, setSelectedDeadline] = useState<Date | undefined>(undefined);\r\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false); // State for delete confirmation dialog\r\n    const [projectToDelete, setProjectToDelete] = useState<string | null>(null); // Track project ID to delete\r\n\r\n    const setActiveProjectId = useUIStore((s) => s.setActiveProjectId);\r\n\r\n    useEffect(() => {\r\n        setProjects(loadLocalProjects());\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!openCreate) {\r\n            setInviteList([]);\r\n            setInviteName(\"\");\r\n            setEditingId(null);\r\n            setSelectedDeadline(undefined);\r\n        }\r\n    }, [openCreate]);\r\n\r\n    const openForEdit = (p: LocalProject) => {\r\n        setEditingId(p.id);\r\n        setInviteList([...p.members]);\r\n        setSelectedDeadline(p.deadline ? new Date(p.deadline) : undefined);\r\n        setOpenCreate(true);\r\n    };\r\n\r\n    const onAddInvite = (e?: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e && e.key !== \"Enter\") return;\r\n        const name = inviteName.trim();\r\n        if (!name) return;\r\n        const id = uuidv4();\r\n        setInviteList((s) => {\r\n            if (s.some((x) => x.name.toLowerCase() === name.toLowerCase())) return s;\r\n            return [...s, { id, name }];\r\n        });\r\n        setInviteName(\"\");\r\n    };\r\n\r\n    const handleCreateOrUpdate = (values: ProjectForm) => {\r\n        const todayStart = startOfDay(new Date());\r\n        if (values.deadline && isBefore(values.deadline, todayStart)) {\r\n            toast.error(\"Deadline cannot be in the past\");\r\n            return;\r\n        }\r\n\r\n        if (editingId) {\r\n            const oldProject = projects.find((p) => p.id === editingId);\r\n            const oldMembers = oldProject ? oldProject.members.map((m) => m.id) : [];\r\n\r\n            updateLocalProject(editingId, {\r\n                name: values.name,\r\n                description: values.description,\r\n                deadline: values.deadline ? values.deadline.toISOString() : undefined,\r\n                members: inviteList,\r\n            });\r\n\r\n            const newMemberIds = inviteList.map((m) => m.id);\r\n            const removedMemberIds = oldMembers.filter((id) => !newMemberIds.includes(id));\r\n\r\n            if (removedMemberIds.length > 0) {\r\n                const tasks = loadLocalTasks();\r\n                tasks.forEach((task) => {\r\n                    if (task.projectId === editingId) {\r\n                        const newAssignees = task.assignees.filter((a) => !removedMemberIds.includes(a.id));\r\n                        if (newAssignees.length < task.assignees.length) {\r\n                            updateLocalTask(task.id, { assignees: newAssignees });\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            setProjects(loadLocalProjects());\r\n            toast.success(\"Project updated successfully\");\r\n            setOpenCreate(false);\r\n            return;\r\n        }\r\n\r\n        const now = new Date().toISOString();\r\n        const newProject: LocalProject = {\r\n            id: `proj-${Date.now()}`,\r\n            name: values.name,\r\n            description: values.description,\r\n            createdAt: now,\r\n            deadline: values.deadline ? values.deadline.toISOString() : undefined,\r\n            managerId: \"leader-1\", // Gán managerId là profile.id mặc định\r\n            members: inviteList,\r\n            tasks: [],\r\n        };\r\n        addLocalProject(newProject);\r\n        setProjects(loadLocalProjects());\r\n        toast.success(\"Project created successfully\");\r\n        setOpenCreate(false);\r\n    };\r\n\r\n    const handleDelete = (id: string) => {\r\n        setProjectToDelete(id);\r\n        setDeleteDialogOpen(true);\r\n    };\r\n\r\n    const confirmDelete = () => {\r\n        if (!projectToDelete) return;\r\n\r\n        const allTasks = loadLocalTasks();\r\n        const projectTasks = allTasks.filter(t => t.projectId === projectToDelete);\r\n        projectTasks.forEach(task => {\r\n            deleteLocalTask(task.id);\r\n        });\r\n\r\n        deleteLocalProject(projectToDelete);\r\n        setProjects(loadLocalProjects());\r\n\r\n        const active = useUIStore.getState().activeProjectId;\r\n        if (active === projectToDelete) setActiveProjectId(null);\r\n\r\n        toast.success(`Project and ${projectTasks.length} task(s) deleted`);\r\n        setDeleteDialogOpen(false);\r\n        setProjectToDelete(null);\r\n    };\r\n\r\n    const tasks = useMemo(() => loadLocalTasks(), []);\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-slate-50 dark:bg-gray-950 p-4 sm:p-6 lg:p-8 transition-colors\">\r\n            <div className=\"max-w-7xl mx-auto space-y-6\">\r\n                <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\r\n                    <div>\r\n                        <h1 className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white text-center sm:text-left\">Projects</h1>\r\n                        <p className=\"text-sm text-slate-600 dark:text-gray-400 mt-1 text-center sm:text-left\">Manage your projects efficiently</p>\r\n                    </div>\r\n\r\n                    <Dialog open={openCreate} onOpenChange={setOpenCreate}>\r\n                        <DialogTrigger asChild>\r\n                            <Button\r\n                                size=\"default\"\r\n                                className=\"bg-emerald-600 hover:bg-emerald-700 dark:bg-emerald-500 dark:hover:bg-emerald-600 text-white w-full sm:w-auto\"\r\n                                onClick={() => {\r\n                                    setEditingId(null);\r\n                                    setInviteList([]);\r\n                                    setOpenCreate(true);\r\n                                }}\r\n                            >\r\n                                <Plus className=\"w-4 h-4 mr-2\" />\r\n                                New Project\r\n                            </Button>\r\n                        </DialogTrigger>\r\n\r\n                        <DialogContent className=\"max-w-2xl max-h-[90vh] overflow-y-auto dark:bg-gray-900 dark:border-gray-800\">\r\n                            <DialogHeader>\r\n                                <DialogTitle className=\"text-xl font-bold dark:text-white\">\r\n                                    {editingId ? \"Edit Project\" : \"Create New Project\"}\r\n                                </DialogTitle>\r\n                            </DialogHeader>\r\n\r\n                            <div className=\"space-y-4 py-4\">\r\n                                <div className=\"space-y-2\">\r\n                                    <Label htmlFor=\"proj-name\" className=\"text-sm font-medium dark:text-gray-200\">\r\n                                        Project Name *\r\n                                    </Label>\r\n                                    <Input\r\n                                        id=\"proj-name\"\r\n                                        placeholder=\"Enter project name\"\r\n                                        className=\"h-10 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:placeholder:text-gray-500\"\r\n                                        defaultValue={\r\n                                            editingId ? projects.find((p) => p.id === editingId)?.name : \"\"\r\n                                        }\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <Label htmlFor=\"proj-desc\" className=\"text-sm font-medium dark:text-gray-200\">\r\n                                        Description\r\n                                    </Label>\r\n                                    <Textarea\r\n                                        id=\"proj-desc\"\r\n                                        placeholder=\"Enter project description\"\r\n                                        className=\"min-h-[100px] resize-none dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:placeholder:text-gray-500\"\r\n                                        defaultValue={\r\n                                            editingId\r\n                                                ? projects.find((p) => p.id === editingId)?.description\r\n                                                : \"\"\r\n                                        }\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <Label className=\"text-sm font-medium dark:text-gray-200\">Deadline</Label>\r\n                                    <Popover>\r\n                                        <PopoverTrigger asChild>\r\n                                            <Button\r\n                                                variant=\"outline\"\r\n                                                className=\"w-full h-10 justify-start text-left font-normal dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\"\r\n                                            >\r\n                                                <CalendarIcon className=\"mr-2 h-4 w-4\" />\r\n                                                <span className={selectedDeadline ? \"\" : \"text-slate-500 dark:text-gray-500\"}>\r\n                                                    {selectedDeadline ? format(selectedDeadline, \"PPP\") : \"Select deadline\"}\r\n                                                </span>\r\n                                            </Button>\r\n                                        </PopoverTrigger>\r\n                                        <PopoverContent className=\"w-auto p-0 dark:bg-gray-900 dark:border-gray-800\" align=\"start\">\r\n                                            <Calendar\r\n                                                mode=\"single\"\r\n                                                selected={selectedDeadline}\r\n                                                onSelect={setSelectedDeadline}\r\n                                                initialFocus\r\n                                            />\r\n                                        </PopoverContent>\r\n                                    </Popover>\r\n                                </div>\r\n\r\n                                <div className=\"space-y-2\">\r\n                                    <Label className=\"text-sm font-medium dark:text-gray-200\">Team Members</Label>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <Input\r\n                                            value={inviteName}\r\n                                            onChange={(e) => setInviteName(e.target.value)}\r\n                                            onKeyDown={(e) => onAddInvite(e)}\r\n                                            placeholder=\"Enter name and press Enter\"\r\n                                            className=\"h-10 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:placeholder:text-gray-500\"\r\n                                        />\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            onClick={() => onAddInvite()}\r\n                                            variant=\"outline\"\r\n                                            className=\"px-4 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\"\r\n                                        >\r\n                                            Add\r\n                                        </Button>\r\n                                    </div>\r\n                                    {inviteList.length > 0 && (\r\n                                        <div className=\"flex gap-2 flex-wrap mt-2 p-3 bg-slate-100 dark:bg-gray-800 rounded-lg\">\r\n                                            {inviteList.map((m) => (\r\n                                                <Badge\r\n                                                    key={m.id}\r\n                                                    variant=\"secondary\"\r\n                                                    className=\"px-3 py-1 dark:bg-gray-700 dark:text-gray-200\"\r\n                                                >\r\n                                                    {m.name}\r\n                                                    <Button\r\n                                                        type=\"button\"\r\n                                                        variant=\"ghost\"\r\n                                                        size=\"icon\"\r\n                                                        className=\"h-4 w-4 ml-2 hover:bg-slate-300 dark:hover:bg-gray-600 rounded-full\"\r\n                                                        onClick={() =>\r\n                                                            setInviteList((s) => s.filter((x) => x.id !== m.id))\r\n                                                        }\r\n                                                    >\r\n                                                        <X className=\"h-3 w-3\" />\r\n                                                    </Button>\r\n                                                </Badge>\r\n                                            ))}\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <DialogFooter className=\"gap-2 flex-col sm:flex-row\">\r\n                                <Button variant=\"outline\" onClick={() => setOpenCreate(false)} className=\"w-full sm:w-auto dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\">\r\n                                    Cancel\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"bg-emerald-600 hover:bg-emerald-700 dark:bg-emerald-500 dark:hover:bg-emerald-600 w-full sm:w-auto\"\r\n                                    onClick={() => {\r\n                                        const nameEl = document.getElementById(\"proj-name\") as HTMLInputElement | null;\r\n                                        const descEl = document.getElementById(\"proj-desc\") as HTMLTextAreaElement | null;\r\n                                        const name = nameEl?.value?.trim() ?? \"\";\r\n                                        const desc = descEl?.value?.trim() ?? \"\";\r\n                                        if (!name) {\r\n                                            toast.error(\"Project name is required\");\r\n                                            return;\r\n                                        }\r\n                                        handleCreateOrUpdate({\r\n                                            name,\r\n                                            description: desc || undefined,\r\n                                            deadline: selectedDeadline,\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {editingId ? \"Save Changes\" : \"Create Project\"}\r\n                                </Button>\r\n                            </DialogFooter>\r\n                        </DialogContent>\r\n                    </Dialog>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\r\n                        <CardContent className=\"p-4 sm:p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-xs sm:text-sm text-slate-600 dark:text-gray-400\">Total Projects</p>\r\n                                    <p className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white mt-1\">{projects.length}</p>\r\n                                </div>\r\n                                <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-lg flex items-center justify-center\">\r\n                                    <FolderKanban className=\"w-5 h-5 sm:w-6 sm:h-6 text-emerald-600 dark:text-emerald-400\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\r\n                        <CardContent className=\"p-4 sm:p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-xs sm:text-sm text-slate-600 dark:text-gray-400\">Total Tasks</p>\r\n                                    <p className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white mt-1\">\r\n                                        {projects.reduce((acc, p) => acc + p.tasks.length, 0)}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-blue-100 dark:bg-blue-900/30 rounded-lg flex items-center justify-center\">\r\n                                    <ListTodo className=\"w-5 h-5 sm:w-6 sm:h-6 text-blue-600 dark:text-blue-400\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900 sm:col-span-2 lg:col-span-1\">\r\n                        <CardContent className=\"p-4 sm:p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-xs sm:text-sm text-slate-600 dark:text-gray-400\">Team Members</p>\r\n                                    <p className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white mt-1\">\r\n                                        {projects.reduce((acc, p) => acc + p.members.length, 0)}\r\n                                    </p>\r\n                                </div>\r\n                                <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-purple-100 dark:bg-purple-900/30 rounded-lg flex items-center justify-center\">\r\n                                    <Users className=\"w-5 h-5 sm:w-6 sm:h-6 text-purple-600 dark:text-purple-400\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\r\n                    {projects.map((project) => (\r\n                        <Card\r\n                            key={project.id}\r\n                            className=\"group hover:shadow-lg dark:hover:shadow-emerald-500/10 transition-all border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900\"\r\n                        >\r\n                            <CardHeader className=\"pb-3\">\r\n                                <CardTitle className=\"text-lg font-semibold text-slate-900 dark:text-white line-clamp-1\">\r\n                                    {project.name}\r\n                                </CardTitle>\r\n                                <CardDescription className=\"mt-1 line-clamp-2 text-sm dark:text-gray-400\">\r\n                                    {project.description || \"No description\"}\r\n                                </CardDescription>\r\n                            </CardHeader>\r\n\r\n                            <CardContent className=\"space-y-3 pb-3\">\r\n                                <Separator className=\"dark:bg-gray-800\" />\r\n\r\n                                <div className=\"flex items-center justify-between text-sm\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <Users className=\"w-4 h-4 text-slate-500 dark:text-gray-400\" />\r\n                                        <span className=\"text-slate-600 dark:text-gray-300\">{project.members.length} members</span>\r\n                                    </div>\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <ListTodo className=\"w-4 h-4 text-slate-500 dark:text-gray-400\" />\r\n                                        <span className=\"text-slate-600 dark:text-gray-300\">{project.tasks.length} tasks</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {project.deadline && (\r\n                                    <div className=\"flex items-center gap-2 text-xs text-slate-600 dark:text-gray-300 bg-slate-50 dark:bg-gray-800 p-2 rounded\">\r\n                                        <CalendarIcon className=\"w-3 h-3\" />\r\n                                        <span>Due: {format(new Date(project.deadline), \"PP\")}</span>\r\n                                    </div>\r\n                                )}\r\n                            </CardContent>\r\n\r\n                            <CardFooter className=\"pt-3 gap-2 border-t dark:border-gray-800 bg-slate-50/50 dark:bg-gray-800/50\">\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline\"\r\n                                    className=\"flex-1 dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\"\r\n                                    onClick={() => setViewing(project)}\r\n                                >\r\n                                    <Eye className=\"w-4 h-4 mr-1\" />\r\n                                    View\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"outline\"\r\n                                    className=\"dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\"\r\n                                    onClick={() => openForEdit(project)}\r\n                                >\r\n                                    <Edit className=\"w-4 h-4\" />\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"sm\"\r\n                                    variant=\"destructive\"\r\n                                    className=\"dark:bg-red-900/50 dark:hover:bg-red-900 dark:border-red-800\"\r\n                                    onClick={() => handleDelete(project.id)}\r\n                                >\r\n                                    <Trash2 className=\"w-4 h-4\" />\r\n                                </Button>\r\n                            </CardFooter>\r\n                        </Card>\r\n                    ))}\r\n                </div>\r\n\r\n                {projects.length === 0 && (\r\n                    <Card className=\"p-8 sm:p-16 text-center border-2 border-dashed border-slate-300 dark:border-gray-800 bg-white dark:bg-gray-900\">\r\n                        <div className=\"flex flex-col items-center gap-4\">\r\n                            <div className=\"w-16 h-16 sm:w-20 sm:h-20 bg-slate-100 dark:bg-gray-800 rounded-xl flex items-center justify-center\">\r\n                                <FolderKanban className=\"w-8 h-8 sm:w-10 sm:h-10 text-slate-400 dark:text-gray-600\" />\r\n                            </div>\r\n                            <h3 className=\"text-xl sm:text-2xl font-bold text-slate-900 dark:text-white\">No projects yet</h3>\r\n                            <p className=\"text-sm sm:text-base text-slate-600 dark:text-gray-400 max-w-md\">\r\n                                Get started by creating your first project\r\n                            </p>\r\n                            <Button\r\n                                onClick={() => setOpenCreate(true)}\r\n                                className=\"mt-4 bg-emerald-600 hover:bg-emerald-700 dark:bg-emerald-500 dark:hover:bg-emerald-600\"\r\n                            >\r\n                                <Plus className=\"w-4 h-4 mr-2\" />\r\n                                Create First Project\r\n                            </Button>\r\n                        </div>\r\n                    </Card>\r\n                )}\r\n\r\n                <Dialog open={deleteDialogOpen} onOpenChange={setDeleteDialogOpen}>\r\n                    <DialogContent className=\"dark:bg-gray-900 dark:border-gray-800\">\r\n                        <DialogHeader>\r\n                            <DialogTitle className=\"dark:text-white\">Confirm Delete</DialogTitle>\r\n                            <DialogDescription className=\"dark:text-gray-400\">\r\n                                Are you sure you want to delete this project and all its associated tasks? This action cannot be undone.\r\n                            </DialogDescription>\r\n                        </DialogHeader>\r\n                        <DialogFooter>\r\n                            <Button\r\n                                variant=\"outline\"\r\n                                className=\"dark:bg-gray-800 dark:border-gray-700 dark:text-white dark:hover:bg-gray-700\"\r\n                                onClick={() => setDeleteDialogOpen(false)}\r\n                            >\r\n                                Cancel\r\n                            </Button>\r\n                            <Button\r\n                                variant=\"destructive\"\r\n                                className=\"dark:bg-red-900/50 dark:hover:bg-red-900\"\r\n                                onClick={confirmDelete}\r\n                            >\r\n                                Delete\r\n                            </Button>\r\n                        </DialogFooter>\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n                <Sheet open={!!viewing} onOpenChange={(open) => !open && setViewing(null)}>\r\n                    <SheetContent className=\"w-full p-4 sm:max-w-xl overflow-y-auto dark:bg-gray-900 dark:border-gray-800\">\r\n                        <SheetHeader className=\"pb-4 border-b dark:border-gray-800\">\r\n                            <SheetTitle className=\"text-xl font-bold dark:text-white\">{viewing?.name}</SheetTitle>\r\n                        </SheetHeader>\r\n                        {viewing && (\r\n                            <div className=\"space-y-6 mt-6\">\r\n                                <div className=\"space-y-2 p-3 bg-slate-50 dark:bg-gray-800 rounded-lg border border-slate-200 dark:border-gray-700\">\r\n                                    <div className=\"flex items-center gap-2 text-xs text-slate-600 dark:text-gray-300\">\r\n                                        <CalendarIcon className=\"w-3 h-3\" />\r\n                                        <span>Created: {format(new Date(viewing.createdAt), \"PP\")}</span>\r\n                                    </div>\r\n                                    {viewing.deadline && (\r\n                                        <div className=\"flex items-center gap-2 text-xs text-slate-600 dark:text-gray-300\">\r\n                                            <CalendarIcon className=\"w-3 h-3\" />\r\n                                            <span>Deadline: {format(new Date(viewing.deadline), \"PP\")}</span>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div>\r\n                                    <h3 className=\"text-sm font-semibold mb-3 flex items-center gap-2 dark:text-white\">\r\n                                        <Users className=\"w-4 h-4\" />\r\n                                        Team Members ({viewing.members.length})\r\n                                    </h3>\r\n                                    {viewing.members.length > 0 ? (\r\n                                        <div className=\"space-y-2\">\r\n                                            {viewing.members.map((m) => (\r\n                                                <div key={m.id} className=\"flex items-center gap-3 p-2 rounded-lg bg-slate-50 dark:bg-gray-800 border border-slate-200 dark:border-gray-700\">\r\n                                                    <div className=\"w-8 h-8 rounded-full bg-emerald-600 dark:bg-emerald-500 text-white flex items-center justify-center text-xs font-medium\">\r\n                                                        {m.name.charAt(0).toUpperCase()}\r\n                                                    </div>\r\n                                                    <span className=\"text-sm dark:text-gray-200\">{m.name}</span>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <p className=\"text-sm text-slate-500 dark:text-gray-400 text-center py-4\">No members</p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Separator className=\"dark:bg-gray-800\" />\r\n\r\n                                <div>\r\n                                    <h3 className=\"text-sm font-semibold mb-3 flex items-center gap-2 dark:text-white\">\r\n                                        <ListTodo className=\"w-4 h-4\" />\r\n                                        Tasks ({viewing.tasks.length})\r\n                                    </h3>\r\n                                    {viewing.tasks.length > 0 ? (\r\n                                        <div className=\"space-y-2\">\r\n                                            {viewing.tasks.map((tid) => {\r\n                                                const t = tasks.find((x) => x.id === tid);\r\n                                                return (\r\n                                                    <div key={tid} className=\"p-3 rounded-lg bg-slate-50 dark:bg-gray-800 border border-slate-200 dark:border-gray-700 space-y-2\">\r\n                                                        <div className=\"font-medium text-sm dark:text-white\">{t?.title || \"Unknown\"}</div>\r\n                                                        {t && (\r\n                                                            <div className=\"flex items-center gap-2 text-xs\">\r\n                                                                <Badge variant={\r\n                                                                    t.status === \"DONE\" ? \"default\" :\r\n                                                                        t.status === \"IN_PROGRESS\" ? \"secondary\" :\r\n                                                                            \"outline\"\r\n                                                                } className=\"text-xs dark:bg-gray-700 dark:text-gray-200\">\r\n                                                                    {t.status}\r\n                                                                </Badge>\r\n                                                                {t.dueDate && (\r\n                                                                    <span className=\"text-slate-600 dark:text-gray-400\">Due: {format(new Date(t.dueDate), \"PP\")}</span>\r\n                                                                )}\r\n                                                            </div>\r\n                                                        )}\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    ) : (\r\n                                        <p className=\"text-sm text-slate-500 dark:text-gray-400 text-center py-4\">No tasks</p>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <Button\r\n                                    size=\"lg\"\r\n                                    className=\"w-full bg-emerald-600 hover:bg-emerald-700 dark:bg-emerald-500 dark:hover:bg-emerald-600\"\r\n                                    onClick={() => {\r\n                                        setActiveProjectId(viewing.id);\r\n                                        setViewing(null);\r\n                                    }}\r\n                                >\r\n                                    Close\r\n                                </Button>\r\n                            </div>\r\n                        )}\r\n                    </SheetContent>\r\n                </Sheet>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}