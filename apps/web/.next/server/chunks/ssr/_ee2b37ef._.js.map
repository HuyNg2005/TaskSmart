{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@workspace/ui/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/packages/ui/src/components/skeleton.tsx"],"sourcesContent":["import { cn } from \"@workspace/ui/lib/utils\"\n\nfunction Skeleton({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"skeleton\"\n      className={cn(\"bg-accent animate-pulse rounded-md\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;;AAAA;;;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAoC;IACpE,qBACE,6WAAC;QACC,aAAU;QACV,WAAW,IAAA,2IAAE,EAAC,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/lib/localProfile.ts"],"sourcesContent":["export type LocalProfile = {\r\n    id: string;\r\n    name: string;\r\n    dob: string;\r\n    position: string;\r\n    avatarUrl?: string;\r\n    coverPhotoUrl?: string;\r\n};\r\n\r\nconst LS_KEY = \"tbx:profile_v1\";\r\n\r\nexport function loadLocalProfile(): LocalProfile {\r\n    const defaultProfile: LocalProfile = {\r\n        id: \"leader-1\",\r\n        name: \"\",\r\n        dob: \"\",\r\n        position: \"\",\r\n        avatarUrl: undefined,\r\n        coverPhotoUrl: undefined,\r\n    };\r\n\r\n    try {\r\n        const raw = localStorage.getItem(LS_KEY);\r\n        if (!raw) {\r\n            saveLocalProfile(defaultProfile);\r\n            return defaultProfile;\r\n        }\r\n        return JSON.parse(raw) as LocalProfile;\r\n    } catch {\r\n        saveLocalProfile(defaultProfile);\r\n        return defaultProfile;\r\n    }\r\n}\r\n\r\nexport function updateLocalProfile(patch: Partial<LocalProfile>): LocalProfile {\r\n    const current = loadLocalProfile();\r\n    const updated = { ...current, ...patch };\r\n    saveLocalProfile(updated);\r\n    return updated;\r\n}\r\n\r\nfunction saveLocalProfile(profile: LocalProfile) {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(profile));\r\n}"],"names":[],"mappings":";;;;;;AASA,MAAM,SAAS;AAER,SAAS;IACZ,MAAM,iBAA+B;QACjC,IAAI;QACJ,MAAM;QACN,KAAK;QACL,UAAU;QACV,WAAW;QACX,eAAe;IACnB;IAEA,IAAI;QACA,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK;YACN,iBAAiB;YACjB,OAAO;QACX;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAM;QACJ,iBAAiB;QACjB,OAAO;IACX;AACJ;AAEO,SAAS,mBAAmB,KAA4B;IAC3D,MAAM,UAAU;IAChB,MAAM,UAAU;QAAE,GAAG,OAAO;QAAE,GAAG,KAAK;IAAC;IACvC,iBAAiB;IACjB,OAAO;AACX;AAEA,SAAS,iBAAiB,OAAqB;IAC3C,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;AAChD","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/lib/localProjects.ts"],"sourcesContent":["export type ProjectMember = { id: string; name: string };\r\nexport type LocalProject = {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    createdAt: string;\r\n    deadline?: string;\r\n    managerId: string;\r\n    members: ProjectMember[];\r\n    tasks: string[];\r\n};\r\n\r\nconst LS_KEY = \"tbx:projects_v1\";\r\n\r\nexport function loadLocalProjects(): LocalProject[] {\r\n    try {\r\n        const raw = localStorage.getItem(LS_KEY);\r\n        if (!raw) {\r\n            const defaultProjects: LocalProject[] = [\r\n                {\r\n                    id: `proj-${Date.now()}`,\r\n                    name: \"Sample Project\",\r\n                    description: \"A sample project for testing\",\r\n                    createdAt: new Date().toISOString(),\r\n                    deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),\r\n                    managerId: \"leader-1\",\r\n                    members: [\r\n                        { id: \"leader-1\", name: \"Leader\" },\r\n                        { id: \"member-2\", name: \"Member\" },\r\n                    ],\r\n                    tasks: [],\r\n                },\r\n            ];\r\n            saveLocalProjects(defaultProjects);\r\n            return defaultProjects;\r\n        }\r\n        return JSON.parse(raw) as LocalProject[];\r\n    } catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function saveLocalProjects(projects: LocalProject[]) {\r\n    localStorage.setItem(LS_KEY, JSON.stringify(projects));\r\n}\r\n\r\nexport function addLocalProject(p: LocalProject) {\r\n    const list = loadLocalProjects();\r\n    list.push(p);\r\n    saveLocalProjects(list);\r\n}\r\n\r\nexport function updateLocalProject(id: string, patch: Partial<LocalProject>) {\r\n    const list = loadLocalProjects();\r\n    const idx = list.findIndex((x) => x.id === id);\r\n    if (idx === -1) return;\r\n    list[idx] = { ...list[idx], ...patch, updatedAt: new Date().toISOString() } as LocalProject;\r\n    saveLocalProjects(list);\r\n}\r\n\r\nexport function deleteLocalProject(id: string) {\r\n    const list = loadLocalProjects().filter((p) => p.id !== id);\r\n    saveLocalProjects(list);\r\n}"],"names":[],"mappings":";;;;;;;;;;;;AAYA,MAAM,SAAS;AAER,SAAS;IACZ,IAAI;QACA,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK;YACN,MAAM,kBAAkC;gBACpC;oBACI,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;oBACxB,MAAM;oBACN,aAAa;oBACb,WAAW,IAAI,OAAO,WAAW;oBACjC,UAAU,IAAI,KAAK,KAAK,GAAG,KAAK,IAAI,KAAK,KAAK,KAAK,MAAM,WAAW;oBACpE,WAAW;oBACX,SAAS;wBACL;4BAAE,IAAI;4BAAY,MAAM;wBAAS;wBACjC;4BAAE,IAAI;4BAAY,MAAM;wBAAS;qBACpC;oBACD,OAAO,EAAE;gBACb;aACH;YACD,kBAAkB;YAClB,OAAO;QACX;QACA,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAM;QACJ,OAAO,EAAE;IACb;AACJ;AAEO,SAAS,kBAAkB,QAAwB;IACtD,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;AAChD;AAEO,SAAS,gBAAgB,CAAe;IAC3C,MAAM,OAAO;IACb,KAAK,IAAI,CAAC;IACV,kBAAkB;AACtB;AAEO,SAAS,mBAAmB,EAAU,EAAE,KAA4B;IACvE,MAAM,OAAO;IACb,MAAM,MAAM,KAAK,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC3C,IAAI,QAAQ,CAAC,GAAG;IAChB,IAAI,CAAC,IAAI,GAAG;QAAE,GAAG,IAAI,CAAC,IAAI;QAAE,GAAG,KAAK;QAAE,WAAW,IAAI,OAAO,WAAW;IAAG;IAC1E,kBAAkB;AACtB;AAEO,SAAS,mBAAmB,EAAU;IACzC,MAAM,OAAO,oBAAoB,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACxD,kBAAkB;AACtB","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/api/projects.ts"],"sourcesContent":["import { loadLocalProjects } from \"@/lib/localProjects\";\r\n\r\nexport async function fetchProjects() {\r\n    return loadLocalProjects();\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe;IAClB,OAAO,IAAA,wJAAiB;AAC5B","debugId":null}},
    {"offset": {"line": 260, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/lib/localTasks.ts"],"sourcesContent":["\r\nexport interface LocalTask {\r\n    id: string;\r\n    title: string;\r\n    description?: string;\r\n    status: \"TODO\" | \"IN_PROGRESS\" | \"DONE\";\r\n    createdAt: string;\r\n    dueDate?: string;\r\n    projectId: string;\r\n    assignees: { id: string; name: string }[];\r\n}\r\n\r\nconst TASKS_LS = \"tbx:tasks_v1\";\r\n\r\nexport function loadLocalTasks(): LocalTask[] {\r\n    try {\r\n        const raw = localStorage.getItem(TASKS_LS);\r\n        if (!raw) return [];\r\n        return JSON.parse(raw) as LocalTask[];\r\n    } catch {\r\n        return [];\r\n    }\r\n}\r\n\r\nexport function saveLocalTasks(tasks: LocalTask[]) {\r\n    localStorage.setItem(TASKS_LS, JSON.stringify(tasks));\r\n}\r\n\r\nexport function addLocalTask(t: LocalTask) {\r\n    const arr = loadLocalTasks();\r\n    arr.push(t);\r\n    saveLocalTasks(arr);\r\n}\r\n\r\nexport function updateLocalTask(id: string, patch: Partial<LocalTask>) {\r\n    const arr = loadLocalTasks();\r\n    const idx = arr.findIndex((x) => x.id === id);\r\n    if (idx === -1) return;\r\n    // @ts-ignore\r\n    arr[idx] = { ...arr[idx], ...patch, updatedAt: new Date().toISOString() };\r\n    saveLocalTasks(arr);\r\n}\r\n\r\nexport function deleteLocalTask(id: string) {\r\n    const arr = loadLocalTasks().filter((t) => t.id !== id);\r\n    saveLocalTasks(arr);\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAYA,MAAM,WAAW;AAEV,SAAS;IACZ,IAAI;QACA,MAAM,MAAM,aAAa,OAAO,CAAC;QACjC,IAAI,CAAC,KAAK,OAAO,EAAE;QACnB,OAAO,KAAK,KAAK,CAAC;IACtB,EAAE,OAAM;QACJ,OAAO,EAAE;IACb;AACJ;AAEO,SAAS,eAAe,KAAkB;IAC7C,aAAa,OAAO,CAAC,UAAU,KAAK,SAAS,CAAC;AAClD;AAEO,SAAS,aAAa,CAAY;IACrC,MAAM,MAAM;IACZ,IAAI,IAAI,CAAC;IACT,eAAe;AACnB;AAEO,SAAS,gBAAgB,EAAU,EAAE,KAAyB;IACjE,MAAM,MAAM;IACZ,MAAM,MAAM,IAAI,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IAC1C,IAAI,QAAQ,CAAC,GAAG;IAChB,aAAa;IACb,GAAG,CAAC,IAAI,GAAG;QAAE,GAAG,GAAG,CAAC,IAAI;QAAE,GAAG,KAAK;QAAE,WAAW,IAAI,OAAO,WAAW;IAAG;IACxE,eAAe;AACnB;AAEO,SAAS,gBAAgB,EAAU;IACtC,MAAM,MAAM,iBAAiB,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACpD,eAAe;AACnB","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///D:/TaskBoard_SmartWorkFlow/TaskBoardSmart/apps/web/components/profile/ProfileContent.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { z } from \"zod\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { Button } from \"@workspace/ui/components/button\";\r\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@workspace/ui/components/card\";\r\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@workspace/ui/components/form\";\r\nimport { Input } from \"@workspace/ui/components/input\";\r\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger } from \"@workspace/ui/components/sheet\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"@workspace/ui/components/avatar\";\r\nimport { Skeleton } from \"@workspace/ui/components/skeleton\";\r\nimport Image from \"next/image\";\r\nimport { format } from \"date-fns\";\r\nimport { loadLocalProfile, updateLocalProfile } from \"@/lib/localProfile\";\r\nimport { fetchProjects } from \"@/api/projects\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { toast } from \"sonner\";\r\nimport { Users, FolderKanban, X, ListTodo } from \"lucide-react\";\r\nimport { loadLocalProjects } from \"@/lib/localProjects\";\r\nimport { loadLocalTasks, updateLocalTask } from \"@/lib/localTasks\";\r\nimport ProfileHeader from \"@/components/profile/ProfileHeder\";\r\n\r\nconst createPreviewUrl = (file: File) => URL.createObjectURL(file);\r\n\r\nconst profileSchema = z.object({\r\n    name: z.string().min(1, \"Name is required\"),\r\n    dob: z.string().refine((val) => !isNaN(Date.parse(val)), \"Invalid date\"),\r\n    position: z.string().min(1, \"Position is required\"),\r\n});\r\n\r\ntype ProfileFormValues = z.infer<typeof profileSchema>;\r\n\r\ninterface LocalProfile {\r\n    id?: string;\r\n    name: string;\r\n    dob: string;\r\n    position: string;\r\n    avatarUrl?: string;\r\n    coverPhotoUrl?: string;\r\n}\r\n\r\nexport default function ProfilePage() {\r\n    const queryClient = useQueryClient();\r\n    const [isSheetOpen, setIsSheetOpen] = useState(false);\r\n    const [avatarFile, setAvatarFile] = useState<File | null>(null);\r\n    const [coverPhotoFile, setCoverPhotoFile] = useState<File | null>(null);\r\n    const [previewAvatarUrl, setPreviewAvatarUrl] = useState<string | null>(null);\r\n    const [previewCoverPhotoUrl, setPreviewCoverPhotoUrl] = useState<string | null>(null);\r\n    const [originalAvatarUrl, setOriginalAvatarUrl] = useState<string | null>(null);\r\n    const [originalCoverPhotoUrl, setOriginalCoverPhotoUrl] = useState<string | null>(null);\r\n\r\n    const { data: profile, isLoading: profileLoading } = useQuery({\r\n        queryKey: [\"profile\"],\r\n        queryFn: () => loadLocalProfile(),\r\n    });\r\n\r\n    const { data: projects = [], refetch: refetchProjects } = useQuery({\r\n        queryKey: [\"projects\"],\r\n        queryFn: fetchProjects,\r\n    });\r\n\r\n    const updateMutation = useMutation({\r\n        mutationFn: async (data: Partial<LocalProfile>) => {\r\n            return await Promise.resolve(updateLocalProfile(data));\r\n        },\r\n        onSuccess: (updatedProfile: LocalProfile) => {\r\n            queryClient.setQueryData([\"profile\"], updatedProfile);\r\n            toast.success(\"Profile updated successfully\");\r\n            setIsSheetOpen(false);\r\n            setPreviewAvatarUrl(updatedProfile.avatarUrl || null);\r\n            setPreviewCoverPhotoUrl(updatedProfile.coverPhotoUrl || null);\r\n            setAvatarFile(null);\r\n            setCoverPhotoFile(null);\r\n        },\r\n        onError: (error) => {\r\n            toast.error(\"Failed to update profile\");\r\n            console.error(\"Update error:\", error);\r\n        },\r\n    });\r\n\r\n    const form = useForm<ProfileFormValues>({\r\n        resolver: zodResolver(profileSchema),\r\n        defaultValues: { name: \"\", dob: \"\", position: \"\" },\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (profile) {\r\n            form.setValue(\"name\", profile.name);\r\n            form.setValue(\"dob\", profile.dob);\r\n            form.setValue(\"position\", profile.position);\r\n            setPreviewAvatarUrl(profile.avatarUrl || null);\r\n            setPreviewCoverPhotoUrl(profile.coverPhotoUrl || null);\r\n            setOriginalAvatarUrl(profile.avatarUrl || null);\r\n            setOriginalCoverPhotoUrl(profile.coverPhotoUrl || null);\r\n        }\r\n    }, [profile, form]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            if (previewAvatarUrl && previewAvatarUrl !== originalAvatarUrl) URL.revokeObjectURL(previewAvatarUrl);\r\n            if (previewCoverPhotoUrl && previewCoverPhotoUrl !== originalCoverPhotoUrl) URL.revokeObjectURL(previewCoverPhotoUrl);\r\n        };\r\n    }, [previewAvatarUrl, previewCoverPhotoUrl, originalAvatarUrl, originalCoverPhotoUrl]);\r\n\r\n    const onSubmit = async (data: ProfileFormValues) => {\r\n        let updatedData = { ...data };\r\n        try {\r\n            if (avatarFile) {\r\n                const avatarUrl = await uploadAvatar(avatarFile);\r\n                // @ts-ignore\r\n                updatedData = { ...updatedData, avatarUrl };\r\n                setPreviewAvatarUrl(avatarUrl);\r\n                setOriginalAvatarUrl(avatarUrl);\r\n            }\r\n            if (coverPhotoFile) {\r\n                const coverPhotoUrl = await uploadCoverPhoto(coverPhotoFile);\r\n                // @ts-ignore\r\n                updatedData = { ...updatedData, coverPhotoUrl };\r\n                setPreviewCoverPhotoUrl(coverPhotoUrl);\r\n                setOriginalCoverPhotoUrl(coverPhotoUrl);\r\n            }\r\n            updateMutation.mutate(updatedData);\r\n        } catch (error) {\r\n            toast.error(\"Failed to upload image\");\r\n            console.error(\"Image upload error:\", error);\r\n        }\r\n    };\r\n\r\n    const onCancel = () => {\r\n        setIsSheetOpen(false);\r\n        setPreviewAvatarUrl(originalAvatarUrl);\r\n        setPreviewCoverPhotoUrl(originalCoverPhotoUrl);\r\n        setAvatarFile(null);\r\n        setCoverPhotoFile(null);\r\n        form.reset({\r\n            name: profile?.name || \"\",\r\n            dob: profile?.dob || \"\",\r\n            position: profile?.position || \"\",\r\n        });\r\n    };\r\n\r\n    const uploadAvatar = async (file: File): Promise<string> => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = reject;\r\n        });\r\n    };\r\n\r\n    const uploadCoverPhoto = async (file: File): Promise<string> => {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = reject;\r\n        });\r\n    };\r\n\r\n    const handleAvatarChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0];\r\n        if (file) {\r\n            setAvatarFile(file);\r\n            const previewUrl = createPreviewUrl(file);\r\n            setPreviewAvatarUrl(previewUrl);\r\n        }\r\n    };\r\n\r\n    const handleCoverPhotoChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.[0];\r\n        if (file) {\r\n            setCoverPhotoFile(file);\r\n            const previewUrl = createPreviewUrl(file);\r\n            setPreviewCoverPhotoUrl(previewUrl);\r\n        }\r\n    };\r\n\r\n    const handleRemoveMember = (projectId: string, memberId: string) => {\r\n        const localProjects = loadLocalProjects();\r\n        const projectIndex = localProjects.findIndex((p) => p.id === projectId);\r\n        if (projectIndex === -1) return;\r\n\r\n        const project = localProjects[projectIndex];\r\n        if (project) {\r\n            project.members = project.members.filter((m) => m.id !== memberId);\r\n            localStorage.setItem(\"tbx:projects_v1\", JSON.stringify(localProjects));\r\n\r\n            const localTasks = loadLocalTasks();\r\n            localTasks.forEach((task) => {\r\n                if (task.projectId === projectId) {\r\n                    const newAssignees = task.assignees.filter((a) => a.id !== memberId);\r\n                    if (newAssignees.length < task.assignees.length) {\r\n                        updateLocalTask(task.id, { assignees: newAssignees });\r\n                    }\r\n                }\r\n            });\r\n\r\n            toast.success(\"Member removed from project\");\r\n            refetchProjects();\r\n        }\r\n    };\r\n\r\n    const managedProjects = projects.filter((p) => p.managerId === profile?.id);\r\n\r\n    if (profileLoading) {\r\n        return (\r\n            <div className=\"min-h-screen bg-slate-50 dark:bg-gray-950 p-4 sm:p-6 lg:p-8 transition-colors\">\r\n                <Skeleton className=\"h-32 w-full max-w-7xl mx-auto\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"min-h-screen bg-slate-50 dark:bg-gray-950 p-4 sm:p-6 lg:p-8 transition-colors\">\r\n            <div className=\"max-w-7xl mx-auto space-y-6\">\r\n              \r\n\r\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 sm:gap-6\">\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900 sm:col-span-2 lg:col-span-2 relative overflow-hidden\">\r\n                        <div\r\n                            className=\"h-32 sm:h-40 w-full bg-gradient-to-r from-emerald-400 to-blue-500 dark:from-emerald-600 dark:to-blue-700\"\r\n                            style={{\r\n                                backgroundImage: previewCoverPhotoUrl || profile?.coverPhotoUrl ? `url(${previewCoverPhotoUrl || profile?.coverPhotoUrl || \"/images/anhcover.jpg\"})` : undefined,\r\n                                backgroundSize: \"cover\",\r\n                                backgroundPosition: \"center\",\r\n                            }}\r\n                        />\r\n                        <div className=\"relative px-4 sm:px-6 pt-4 pb-6\">\r\n                            <div className=\"flex items-end gap-4\">\r\n                                <Avatar className=\"h-24 w-24 sm:h-28 sm:w-28 -mt-12 border-4 border-white dark:border-gray-900 shadow-lg\">\r\n                                    <AvatarImage src={previewAvatarUrl || profile?.avatarUrl || undefined} />\r\n                                    <AvatarFallback className=\"bg-emerald-500 dark:bg-emerald-600 text-white text-xl font-semibold\">\r\n                                        {profile?.name?.[0]}\r\n                                    </AvatarFallback>\r\n                                </Avatar>\r\n                                <div className=\"flex-1 flex flex-col sm:flex-row sm:items-end sm:justify-between gap-2\">\r\n                                    <h2 className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white hover:text-emerald-600 dark:hover:text-emerald-400 transition-colors\">\r\n                                        {profile?.name}\r\n                                    </h2>\r\n                                    <Button\r\n                                        size=\"sm\"\r\n                                        onClick={() => setIsSheetOpen(true)}\r\n                                        className=\"bg-emerald-600 hover:bg-emerald-700 dark:bg-emerald-500 dark:hover:bg-emerald-600 text-white px-4 py-1.5\"\r\n                                    >\r\n                                        <Users className=\"w-4 h-4 mr-2\" />\r\n                                        Edit Profile\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"mt-4 space-y-2\">\r\n                                <p className=\"text-sm text-slate-600 dark:text-gray-300\">\r\n                                    <span className=\"font-medium\">Date of Birth:</span>{\" \"}\r\n                                    {profile?.dob ? format(new Date(profile.dob), \"PPP\") : \"Not set\"}\r\n                                </p>\r\n                                <p className=\"text-sm text-slate-600 dark:text-gray-300\">\r\n                                    <span className=\"font-medium\">Position:</span> {profile?.position}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </Card>\r\n\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900\">\r\n                        <CardContent className=\"p-4 sm:p-6\">\r\n                            <div className=\"flex items-center justify-between\">\r\n                                <div>\r\n                                    <p className=\"text-xs sm:text-sm text-slate-600 dark:text-gray-400\">Managed Projects</p>\r\n                                    <p className=\"text-2xl sm:text-3xl font-bold text-slate-900 dark:text-white mt-1\">{managedProjects.length}</p>\r\n                                </div>\r\n                                <div className=\"w-10 h-10 sm:w-12 sm:h-12 bg-emerald-100 dark:bg-emerald-900/30 rounded-lg flex items-center justify-center\">\r\n                                    <FolderKanban className=\"w-5 h-5 sm:w-6 sm:h-6 text-emerald-600 dark:text-emerald-400\" />\r\n                                </div>\r\n                            </div>\r\n                        </CardContent>\r\n                    </Card>\r\n\r\n                    <Card className=\"border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900 sm:col-span-2 lg:col-span-3\">\r\n                        <CardHeader className=\"pb-3\">\r\n                            <CardTitle className=\"text-lg font-semibold text-slate-900 dark:text-white\">Managed Projects</CardTitle>\r\n                            <CardDescription className=\"mt-1 text-sm dark:text-gray-400\">Projects you are managing</CardDescription>\r\n                        </CardHeader>\r\n                        <CardContent className=\"p-4 sm:p-6\">\r\n                            {managedProjects.length > 0 ? (\r\n                                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                                    {managedProjects.map((proj) => {\r\n                                        const projectTasks = loadLocalTasks().filter((t) => t.projectId === proj.id);\r\n                                        return (\r\n                                            <Card\r\n                                                key={proj.id}\r\n                                                className=\"group hover:shadow-lg dark:hover:shadow-emerald-500/10 transition-all border border-slate-200 dark:border-gray-800 bg-white dark:bg-gray-900\"\r\n                                            >\r\n                                                <CardHeader className=\"pb-3\">\r\n                                                    <CardTitle className=\"text-lg font-semibold text-slate-900 dark:text-white line-clamp-1\">\r\n                                                        {proj.name}\r\n                                                    </CardTitle>\r\n                                                </CardHeader>\r\n                                                <CardContent className=\"px-4 pb-4 space-y-4\">\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <p className=\"text-sm font-medium text-slate-900 dark:text-white flex items-center gap-2\">\r\n                                                            <Users className=\"w-4 h-4\" />\r\n                                                            Members ({proj.members.length})\r\n                                                        </p>\r\n                                                        <div className=\"flex flex-wrap gap-2\">\r\n                                                            {proj.members.map((m) => (\r\n                                                                <div\r\n                                                                    key={m.id}\r\n                                                                    className=\"flex items-center gap-1 px-2 py-1 bg-slate-100 dark:bg-gray-800 rounded-full text-xs font-medium text-slate-700 dark:text-gray-300\"\r\n                                                                >\r\n                                                                    {m.name}\r\n                                                                    <Button\r\n                                                                        variant=\"ghost\"\r\n                                                                        size=\"icon\"\r\n                                                                        className=\"h-4 w-4 text-red-500 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300\"\r\n                                                                        onClick={() => handleRemoveMember(proj.id, m.id)}\r\n                                                                    >\r\n                                                                        <X className=\"h-3 w-3\" />\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            ))}\r\n                                                            {proj.members.length === 0 && (\r\n                                                                <p className=\"text-sm text-slate-500 dark:text-gray-400 italic\">No members yet</p>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"space-y-2\">\r\n                                                        <p className=\"text-sm font-medium text-slate-900 dark:text-white flex items-center gap-2\">\r\n                                                            <ListTodo className=\"w-4 h-4\" />\r\n                                                            Tasks ({projectTasks.length})\r\n                                                        </p>\r\n                                                        <div className=\"space-y-2\">\r\n                                                            {projectTasks.length > 0 ? (\r\n                                                                projectTasks.map((task) => (\r\n                                                                    <div\r\n                                                                        key={task.id}\r\n                                                                        className=\"p-2 rounded-lg bg-slate-50 dark:bg-gray-800 border border-slate-200 dark:border-gray-700 space-y-1\"\r\n                                                                    >\r\n                                                                        <div className=\"font-medium text-sm dark:text-white\">{task.title}</div>\r\n                                                                        <div className=\"flex flex-wrap gap-2\">\r\n                                                                            {task.assignees.map((a) => (\r\n                                                                                <div\r\n                                                                                    key={a.id}\r\n                                                                                    className=\"flex items-center gap-2 px-2 py-1 bg-slate-100 dark:bg-gray-800 rounded-full text-xs font-medium text-slate-700 dark:text-gray-300\"\r\n                                                                                >\r\n                                                                                    <Avatar className=\"h-6 w-6\">\r\n                                                                                        <AvatarFallback className=\"bg-emerald-600 dark:bg-emerald-500 text-white text-xs font-medium\">\r\n                                                                                            {a.name.charAt(0).toUpperCase()}\r\n                                                                                        </AvatarFallback>\r\n                                                                                    </Avatar>\r\n                                                                                    <span>{a.name}</span>\r\n                                                                                </div>\r\n                                                                            ))}\r\n                                                                            {task.assignees.length === 0 && (\r\n                                                                                <p className=\"text-xs text-slate-500 dark:text-gray-400 italic\">No assignees</p>\r\n                                                                            )}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                ))\r\n                                                            ) : (\r\n                                                                <p className=\"text-sm text-slate-500 dark:text-gray-400 italic\">No tasks yet</p>\r\n                                                            )}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </CardContent>\r\n                                            </Card>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"text-center py-8\">\r\n                                    <FolderKanban className=\"w-10 h-10 mx-auto text-slate-400 dark:text-gray-600\" />\r\n                                    <p className=\"mt-4 text-sm text-slate-600 dark:text-gray-400\">No projects assigned</p>\r\n                                </div>\r\n                            )}\r\n                        </CardContent>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}